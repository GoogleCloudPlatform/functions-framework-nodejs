name: Node.js Conformance CI
on:
  push:
  pull_request:

# Declare default permissions as read only.
permissions: read-all

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10, 12, 14, 16, 18, 20]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@55d479fb1c5bcad5a4f9099a5d9f37c8857b2845 # v2.4.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            objects.githubusercontent.com:443
            proxy.golang.org:443
            registry.npmjs.org:443
            storage.googleapis.com:443
            sum.golang.org:443

      - name: Checkout code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build Functions Framework
        run: npm ci

      - name: Build test project
        working-directory: ./test/conformance
        run: npm install

      - name: Install conformance client
        uses: GoogleCloudPlatform/functions-framework-conformance/.github/actions/client/install@5f2a796b58f099d749e70ecc83f531f6701c64af # v1.8.3
        with:
          client-version: v1.7.0
          cache-path: ~/client
          cache-key: conformance-client-v1.7.0

      - name: Run HTTP conformance tests using legacy API
        working-directory: 'test/conformance'
        run: |
          ~/client \
              -type=http \
              -buildpacks=false \
              -cmd="npm start -- --target=writeHttp --signature-type=http"

      - name: Run event conformance tests using legacy API
        working-directory: 'test/conformance'
        run: |
          ~/client \
              -type=legacyevent \
              -buildpacks=false \
              -cmd="npm start -- --target=writeLegacyEvent --signature-type=event"

      - name: Run cloudevent conformance tests using legacy API
        working-directory: 'test/conformance'
        run: |
          ~/client \
              -type=cloudevent \
              -buildpacks=false \
              -cmd="npm start -- --target=writeCloudEvent --signature-type=cloudevent"

      - name: Run HTTP conformance tests using declarative API
        working-directory: 'test/conformance'
        run: |
          ~/client \
              -type=http \
              -buildpacks=false \
              -validate-mapping=false \
              -cmd="npm start -- --target=writeHttpDeclarative"

      - name: Run cloudevent conformance tests using declarative API
        working-directory: 'test/conformance'
        run: |
          ~/client \
              -type=cloudevent \
              -buildpacks=false \
              -validate-mapping=true \
              -cmd="npm start -- --target=writeCloudEventDeclarative"

      - name: Run HTTP concurrency test
        working-directory: 'test/conformance'
        run: |
          ~/client \
              -type=http \
              -buildpacks=false \
              -validate-concurrency=true \
              -cmd="npm start -- --target=concurrentHttp"
